{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--) if (decorator = decorators[i]) result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport { html } from \"@spectrum-web-components/base\";\nimport { property, query } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { LikeAnchor } from \"@spectrum-web-components/shared/src/like-anchor.js\";\nimport { Focusable } from \"@spectrum-web-components/shared/src/focusable.js\";\nimport { ObserveSlotText } from \"@spectrum-web-components/shared/src/observe-slot-text.js\";\nimport buttonStyles from \"./button-base.css.js\";\nexport class ButtonBase extends ObserveSlotText(LikeAnchor(Focusable), \"\", [\"sp-overlay,sp-tooltip\"]) {\n  constructor() {\n    super();\n    this.active = false;\n    this.type = \"button\";\n    this.proxyFocus = this.proxyFocus.bind(this);\n    this.addEventListener(\"click\", this.handleClickCapture, {\n      capture: true\n    });\n  }\n  static get styles() {\n    return [buttonStyles];\n  }\n  get focusElement() {\n    return this;\n  }\n  get hasLabel() {\n    return this.slotHasContent;\n  }\n  get buttonContent() {\n    const content = [html`\n                <slot name=\"icon\" ?icon-only=${!this.hasLabel}></slot>\n            `, html`\n                <span id=\"label\">\n                    <slot @slotchange=${this.manageTextObservedSlot}></slot>\n                </span>\n            `];\n    return content;\n  }\n  click() {\n    if (this.disabled) {\n      return;\n    }\n    if (this.shouldProxyClick()) {\n      return;\n    }\n    super.click();\n  }\n  handleClickCapture(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      event.stopPropagation();\n      return false;\n    }\n  }\n  proxyFocus() {\n    this.focus();\n  }\n  shouldProxyClick() {\n    let handled = false;\n    if (this.anchorElement) {\n      this.anchorElement.click();\n      handled = true;\n    } else if (this.type !== \"button\") {\n      const proxy = document.createElement(\"button\");\n      proxy.type = this.type;\n      this.insertAdjacentElement(\"afterend\", proxy);\n      proxy.click();\n      proxy.remove();\n      handled = true;\n    }\n    return handled;\n  }\n  renderAnchor() {\n    return html`\n            ${this.buttonContent}\n            ${super.renderAnchor({\n      id: \"button\",\n      ariaHidden: true,\n      className: \"button anchor hidden\"\n    })}\n        `;\n  }\n  renderButton() {\n    return html`\n            ${this.buttonContent}\n        `;\n  }\n  render() {\n    return this.href && this.href.length > 0 ? this.renderAnchor() : this.renderButton();\n  }\n  handleKeydown(event) {\n    const {\n      code\n    } = event;\n    switch (code) {\n      case \"Space\":\n        event.preventDefault();\n        if (typeof this.href === \"undefined\") {\n          this.addEventListener(\"keyup\", this.handleKeyup);\n          this.active = true;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  handleKeypress(event) {\n    const {\n      code\n    } = event;\n    switch (code) {\n      case \"Enter\":\n      case \"NumpadEnter\":\n        this.click();\n        break;\n      default:\n        break;\n    }\n  }\n  handleKeyup(event) {\n    const {\n      code\n    } = event;\n    switch (code) {\n      case \"Space\":\n        this.removeEventListener(\"keyup\", this.handleKeyup);\n        this.active = false;\n        this.click();\n        break;\n      default:\n        break;\n    }\n  }\n  manageAnchor() {\n    if (this.href && this.href.length > 0) {\n      if (!this.hasAttribute(\"role\") || this.getAttribute(\"role\") === \"button\") {\n        this.setAttribute(\"role\", \"link\");\n      }\n      this.removeEventListener(\"click\", this.shouldProxyClick);\n    } else {\n      if (!this.hasAttribute(\"role\") || this.getAttribute(\"role\") === \"link\") {\n        this.setAttribute(\"role\", \"button\");\n      }\n      this.addEventListener(\"click\", this.shouldProxyClick);\n    }\n  }\n  firstUpdated(changed) {\n    super.firstUpdated(changed);\n    if (!this.hasAttribute(\"tabindex\")) {\n      this.setAttribute(\"tabindex\", \"0\");\n    }\n    this.manageAnchor();\n    this.addEventListener(\"keydown\", this.handleKeydown);\n    this.addEventListener(\"keypress\", this.handleKeypress);\n  }\n  updated(changed) {\n    super.updated(changed);\n    if (changed.has(\"href\")) {\n      this.manageAnchor();\n    }\n    if (changed.has(\"label\")) {\n      this.setAttribute(\"aria-label\", this.label || \"\");\n    }\n    if (this.anchorElement) {\n      this.anchorElement.addEventListener(\"focus\", this.proxyFocus);\n      this.anchorElement.tabIndex = -1;\n    }\n  }\n}\n__decorateClass([property({\n  type: Boolean,\n  reflect: true\n})], ButtonBase.prototype, \"active\", 2);\n__decorateClass([property({\n  type: String\n})], ButtonBase.prototype, \"type\", 2);\n__decorateClass([query(\".anchor\")], ButtonBase.prototype, \"anchorElement\", 2);","map":{"version":3,"names":["html","property","query","LikeAnchor","Focusable","ObserveSlotText","buttonStyles","ButtonBase","constructor","active","type","proxyFocus","bind","addEventListener","handleClickCapture","capture","styles","focusElement","hasLabel","slotHasContent","buttonContent","content","manageTextObservedSlot","click","disabled","shouldProxyClick","event","preventDefault","stopImmediatePropagation","stopPropagation","focus","handled","anchorElement","proxy","document","createElement","insertAdjacentElement","remove","renderAnchor","id","ariaHidden","className","renderButton","render","href","length","handleKeydown","code","handleKeyup","handleKeypress","removeEventListener","manageAnchor","hasAttribute","getAttribute","setAttribute","firstUpdated","changed","updated","has","label","tabIndex","__decorateClass","Boolean","reflect","prototype","String"],"sources":["/Users/shivangic/Documents/Github Work/Recommendation-System/node_modules/@spectrum-web-components/button/src/ButtonBase.ts"],"sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { LikeAnchor } from '@spectrum-web-components/shared/src/like-anchor.js';\nimport { Focusable } from '@spectrum-web-components/shared/src/focusable.js';\nimport { ObserveSlotText } from '@spectrum-web-components/shared/src/observe-slot-text.js';\nimport buttonStyles from './button-base.css.js';\n\n/**\n * @slot - text content to be displayed in the Button element\n * @slot icon - icon element(s) to display at the start of the button\n */\nexport class ButtonBase extends ObserveSlotText(LikeAnchor(Focusable), '', [\n    'sp-overlay,sp-tooltip',\n]) {\n    public static override get styles(): CSSResultArray {\n        return [buttonStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public active = false;\n\n    @property({ type: String })\n    public type: 'button' | 'submit' | 'reset' = 'button';\n\n    @query('.anchor')\n    private anchorElement!: HTMLButtonElement;\n\n    public override get focusElement(): HTMLElement {\n        return this;\n    }\n\n    protected get hasLabel(): boolean {\n        return this.slotHasContent;\n    }\n\n    protected get buttonContent(): TemplateResult[] {\n        const content = [\n            html`\n                <slot name=\"icon\" ?icon-only=${!this.hasLabel}></slot>\n            `,\n            html`\n                <span id=\"label\">\n                    <slot @slotchange=${this.manageTextObservedSlot}></slot>\n                </span>\n            `,\n        ];\n        return content;\n    }\n\n    constructor() {\n        super();\n        this.proxyFocus = this.proxyFocus.bind(this);\n\n        this.addEventListener('click', this.handleClickCapture, {\n            capture: true,\n        });\n    }\n\n    public override click(): void {\n        if (this.disabled) {\n            return;\n        }\n\n        if (this.shouldProxyClick()) {\n            return;\n        }\n\n        super.click();\n    }\n\n    private handleClickCapture(event: Event): void | boolean {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            return false;\n        }\n    }\n\n    private proxyFocus(): void {\n        this.focus();\n    }\n\n    private shouldProxyClick(): boolean {\n        let handled = false;\n        if (this.anchorElement) {\n            this.anchorElement.click();\n            handled = true;\n        } else if (this.type !== 'button') {\n            const proxy = document.createElement('button');\n            proxy.type = this.type;\n            this.insertAdjacentElement('afterend', proxy);\n            proxy.click();\n            proxy.remove();\n            handled = true;\n        }\n        return handled;\n    }\n\n    public override renderAnchor(): TemplateResult {\n        return html`\n            ${this.buttonContent}\n            ${super.renderAnchor({\n                id: 'button',\n                ariaHidden: true,\n                className: 'button anchor hidden',\n            })}\n        `;\n    }\n\n    protected renderButton(): TemplateResult {\n        return html`\n            ${this.buttonContent}\n        `;\n    }\n\n    protected override render(): TemplateResult {\n        return this.href && this.href.length > 0\n            ? this.renderAnchor()\n            : this.renderButton();\n    }\n\n    protected handleKeydown(event: KeyboardEvent): void {\n        const { code } = event;\n        switch (code) {\n            case 'Space':\n                event.preventDefault();\n                if (typeof this.href === 'undefined') {\n                    this.addEventListener('keyup', this.handleKeyup);\n                    this.active = true;\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    private handleKeypress(event: KeyboardEvent): void {\n        const { code } = event;\n        switch (code) {\n            case 'Enter':\n            case 'NumpadEnter':\n                this.click();\n                break;\n            default:\n                break;\n        }\n    }\n\n    protected handleKeyup(event: KeyboardEvent): void {\n        const { code } = event;\n        switch (code) {\n            case 'Space':\n                this.removeEventListener('keyup', this.handleKeyup);\n                this.active = false;\n                this.click();\n                break;\n            default:\n                break;\n        }\n    }\n\n    private manageAnchor(): void {\n        if (this.href && this.href.length > 0) {\n            if (\n                !this.hasAttribute('role') ||\n                this.getAttribute('role') === 'button'\n            ) {\n                this.setAttribute('role', 'link');\n            }\n            this.removeEventListener('click', this.shouldProxyClick);\n        } else {\n            if (\n                !this.hasAttribute('role') ||\n                this.getAttribute('role') === 'link'\n            ) {\n                this.setAttribute('role', 'button');\n            }\n            this.addEventListener('click', this.shouldProxyClick);\n        }\n    }\n\n    protected override firstUpdated(changed: PropertyValues): void {\n        super.firstUpdated(changed);\n        if (!this.hasAttribute('tabindex')) {\n            this.setAttribute('tabindex', '0');\n        }\n        this.manageAnchor();\n        this.addEventListener('keydown', this.handleKeydown);\n        this.addEventListener('keypress', this.handleKeypress);\n    }\n\n    protected override updated(changed: PropertyValues): void {\n        super.updated(changed);\n        if (changed.has('href')) {\n            this.manageAnchor();\n        }\n        if (changed.has('label')) {\n            this.setAttribute('aria-label', this.label || '');\n        }\n        if (this.anchorElement) {\n            this.anchorElement.addEventListener('focus', this.proxyFocus);\n            this.anchorElement.tabIndex = -1;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}