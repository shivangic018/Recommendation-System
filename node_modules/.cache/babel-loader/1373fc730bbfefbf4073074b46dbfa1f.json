{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nfunction* o(o, t) {\n  const f = \"function\" == typeof t;\n  if (void 0 !== o) {\n    let i = -1;\n    for (const n of o) i > -1 && (yield f ? t(i) : t), i++, yield n;\n  }\n}\nexport { o as join };","map":{"version":3,"sources":["../src/directives/join.ts"],"names":["join","items","joiner","isFunction","undefined","i","value"],"mappings":";;;;;UA2BiBA,CAAAA,CAAWC,CAAAA,EAAgCC,CAAAA,EAAAA;EAC1D,MAAMC,CAAAA,GAA+B,UAAA,IAAA,OAAXD,CAAAA;EAC1B,IAAA,KAAcE,CAAAA,KAAVH,CAAAA,EAAqB;IACvB,IAAII,CAAAA,GAAAA,CAAK,CAAA;IACT,KAAK,MAAMC,CAAAA,IAASL,CAAAA,EACdI,CAAAA,GAAAA,CAAK,CAAA,KAAA,MACDF,CAAAA,GAAaD,CAAAA,CAAOG,CAAAA,CAAAA,GAAKH,CAAAA,CAAAA,EAEjCG,CAAAA,EAAAA,EAAAA,MACMC,CAET;EAAA;AACH;AAAA,SAAA,CAAA,IAAA,IAAA","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Returns an iterable containing the values in `items` interleaved with the\n * `joiner` value.\n *\n * @example\n *\n * ```ts\n * render() {\n *   return html`\n *     ${join(items, html`<span class=\"separator\">|</span>`)}\n *   `;\n * }\n */\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: (index: number) => J,\n): Iterable<I | J>;\nexport function join<I, J>(\n  items: Iterable<I> | undefined,\n  joiner: J,\n): Iterable<I | J>;\nexport function* join<I, J>(items: Iterable<I> | undefined, joiner: J) {\n  const isFunction = typeof joiner === 'function';\n  if (items !== undefined) {\n    let i = -1;\n    for (const value of items) {\n      if (i > -1) {\n        yield isFunction ? joiner(i) : joiner;\n      }\n      i++;\n      yield value;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}