{"ast":null,"code":"import { defaultConverter as t, notEqual as e } from \"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst o = {\n    attribute: !0,\n    type: String,\n    converter: t,\n    reflect: !1,\n    hasChanged: e\n  },\n  r = (t = o, e, r) => {\n    const {\n      kind: n,\n      metadata: i\n    } = r;\n    let s = globalThis.litPropertyMetadata.get(i);\n    if (void 0 === s && globalThis.litPropertyMetadata.set(i, s = new Map()), s.set(r.name, t), \"accessor\" === n) {\n      const {\n        name: o\n      } = r;\n      return {\n        set(r) {\n          const n = e.get.call(this);\n          e.set.call(this, r), this.requestUpdate(o, n, t);\n        },\n        init(e) {\n          return void 0 !== e && this.P(o, void 0, t), e;\n        }\n      };\n    }\n    if (\"setter\" === n) {\n      const {\n        name: o\n      } = r;\n      return function (r) {\n        const n = this[o];\n        e.call(this, r), this.requestUpdate(o, n, t);\n      };\n    }\n    throw Error(\"Unsupported decorator location: \" + n);\n  };\nfunction n(t) {\n  return (e, o) => \"object\" == typeof o ? r(t, e, o) : ((t, e, o) => {\n    const r = e.hasOwnProperty(o);\n    return e.constructor.createProperty(o, r ? {\n      ...t,\n      wrapped: !0\n    } : t), r ? Object.getOwnPropertyDescriptor(e, o) : void 0;\n  })(t, e, o);\n}\nexport { n as property, r as standardProperty };","map":null,"metadata":{},"sourceType":"module"}