{"ast":null,"code":"\"use strict\";\n\nimport { LitElement as m } from \"lit\";\nimport { version as u } from \"@spectrum-web-components/base/src/version.js\";\nconst c = new Set(),\n  g = () => {\n    const s = document.documentElement.dir === \"rtl\" ? document.documentElement.dir : \"ltr\";\n    c.forEach(o => {\n      o.setAttribute(\"dir\", s);\n    });\n  },\n  w = new MutationObserver(g);\nw.observe(document.documentElement, {\n  attributes: !0,\n  attributeFilter: [\"dir\"]\n});\nconst p = s => typeof s.startManagingContentDirection != \"undefined\" || s.tagName === \"SP-THEME\";\nexport function SpectrumMixin(s) {\n  class o extends s {\n    get isLTR() {\n      return this.dir === \"ltr\";\n    }\n    hasVisibleFocusInTree() {\n      const n = ((r = document) => {\n        var l;\n        let t = r.activeElement;\n        for (; t != null && t.shadowRoot && t.shadowRoot.activeElement;) t = t.shadowRoot.activeElement;\n        const a = t ? [t] : [];\n        for (; t;) {\n          const i = t.assignedSlot || t.parentElement || ((l = t.getRootNode()) == null ? void 0 : l.host);\n          i && a.push(i), t = i;\n        }\n        return a;\n      })(this.getRootNode())[0];\n      if (!n) return !1;\n      try {\n        return n.matches(\":focus-visible\") || n.matches(\".focus-visible\");\n      } catch (r) {\n        return n.matches(\".focus-visible\");\n      }\n    }\n    connectedCallback() {\n      if (!this.hasAttribute(\"dir\")) {\n        let e = this.assignedSlot || this.parentNode;\n        for (; e !== document.documentElement && !p(e);) e = e.assignedSlot || e.parentNode || e.host;\n        if (this.dir = e.dir === \"rtl\" ? e.dir : this.dir || \"ltr\", e === document.documentElement) c.add(this);else {\n          const {\n            localName: n\n          } = e;\n          n.search(\"-\") > -1 && !customElements.get(n) ? customElements.whenDefined(n).then(() => {\n            e.startManagingContentDirection(this);\n          }) : e.startManagingContentDirection(this);\n        }\n        this._dirParent = e;\n      }\n      super.connectedCallback();\n    }\n    disconnectedCallback() {\n      super.disconnectedCallback(), this._dirParent && (this._dirParent === document.documentElement ? c.delete(this) : this._dirParent.stopManagingContentDirection(this), this.removeAttribute(\"dir\"));\n    }\n  }\n  return o;\n}\nexport class SpectrumElement extends SpectrumMixin(m) {}\nSpectrumElement.VERSION = u;","map":null,"metadata":{},"sourceType":"module"}