{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--) if (decorator = decorators[i]) result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nimport { html, SizedMixin } from \"@spectrum-web-components/base\";\nimport { property } from \"@spectrum-web-components/base/src/decorators.js\";\nimport { ButtonBase } from \"./ButtonBase.dev.js\";\nimport buttonStyles from \"./button.css.js\";\nimport { when } from \"@spectrum-web-components/base/src/directives.js\";\nexport const VALID_VARIANTS = [\"accent\", \"primary\", \"secondary\", \"negative\", \"white\", \"black\"];\nexport const VALID_STATICS = [\"white\", \"black\"];\nexport class Button extends SizedMixin(ButtonBase, {\n  noDefaultSize: true\n}) {\n  constructor() {\n    super(...arguments);\n    this.pendingLabel = \"Pending\";\n    this.pending = false;\n    this.cachedAriaLabel = null;\n    this._variant = \"accent\";\n    this.treatment = \"fill\";\n  }\n  static get styles() {\n    return [...super.styles, buttonStyles];\n  }\n  click() {\n    if (this.pending) {\n      return;\n    }\n    super.click();\n  }\n  get variant() {\n    return this._variant;\n  }\n  set variant(variant) {\n    if (variant === this.variant) return;\n    this.requestUpdate(\"variant\", this.variant);\n    switch (variant) {\n      case \"cta\":\n        this._variant = \"accent\";\n        if (true) {\n          window.__swc.warn(this, `The \"cta\" value of the \"variant\" attribute on <${this.localName}> has been deprecated and will be removed in a future release. Use \"variant='accent'\" instead.`, \"https://opensource.adobe.com/spectrum-web-components/components/button/#variants\");\n        }\n        break;\n      case \"overBackground\":\n        this.removeAttribute(\"variant\");\n        this.static = \"white\";\n        this.treatment = \"outline\";\n        if (true) {\n          window.__swc.warn(this, `The \"overBackground\" value of the \"variant\" attribute on <${this.localName}> has been deprecated and will be removed in a future release. Use \"static='white'\" with \"treatment='outline'\" instead.`, \"https://opensource.adobe.com/spectrum-web-components/components/button#static\");\n        }\n        return;\n      case \"white\":\n      case \"black\":\n        this.static = variant;\n        this.removeAttribute(\"variant\");\n        if (true) {\n          window.__swc.warn(this, `The \"black\" and \"white\" values of the \"variant\" attribute on <${this.localName}> has been deprecated and will be removed in a future release. Use \"static='black'\" or \"static='white'\" instead.`, \"https://opensource.adobe.com/spectrum-web-components/components/button#static\");\n        }\n        return;\n      case null:\n        return;\n      default:\n        if (!VALID_VARIANTS.includes(variant)) {\n          this._variant = \"accent\";\n        } else {\n          this._variant = variant;\n        }\n        break;\n    }\n    this.setAttribute(\"variant\", this.variant);\n  }\n  set quiet(quiet) {\n    this.treatment = quiet ? \"outline\" : \"fill\";\n  }\n  get quiet() {\n    return this.treatment === \"outline\";\n  }\n  firstUpdated(changes) {\n    super.firstUpdated(changes);\n    if (!this.hasAttribute(\"variant\")) {\n      this.setAttribute(\"variant\", this.variant);\n    }\n  }\n  updated(changed) {\n    super.updated(changed);\n    if (changed.has(\"pending\")) {\n      if (this.pending && this.pendingLabel !== this.getAttribute(\"aria-label\")) {\n        if (!this.disabled) {\n          this.cachedAriaLabel = this.getAttribute(\"aria-label\") || \"\";\n          this.setAttribute(\"aria-label\", this.pendingLabel);\n        }\n      } else if (!this.pending && this.cachedAriaLabel) {\n        this.setAttribute(\"aria-label\", this.cachedAriaLabel);\n      } else if (!this.pending && this.cachedAriaLabel === \"\") {\n        this.removeAttribute(\"aria-label\");\n      }\n    }\n    if (changed.has(\"disabled\")) {\n      if (!this.disabled && this.pendingLabel !== this.getAttribute(\"aria-label\")) {\n        if (this.pending) {\n          this.cachedAriaLabel = this.getAttribute(\"aria-label\") || \"\";\n          this.setAttribute(\"aria-label\", this.pendingLabel);\n        }\n      } else if (this.disabled && this.cachedAriaLabel) {\n        this.setAttribute(\"aria-label\", this.cachedAriaLabel);\n      } else if (this.disabled && this.cachedAriaLabel == \"\") {\n        this.removeAttribute(\"aria-label\");\n      }\n    }\n  }\n  renderButton() {\n    return html`\n            ${this.buttonContent}\n            ${when(this.pending, () => {\n      import(\"@spectrum-web-components/progress-circle/sp-progress-circle.js\");\n      return html`\n                    <sp-progress-circle\n                        indeterminate\n                        static=\"white\"\n                        aria-hidden=\"true\"\n                    ></sp-progress-circle>\n                `;\n    })}\n        `;\n  }\n}\n__decorateClass([property({\n  type: String,\n  attribute: \"pending-label\"\n})], Button.prototype, \"pendingLabel\", 2);\n__decorateClass([property({\n  type: Boolean,\n  reflect: true,\n  attribute: true\n})], Button.prototype, \"pending\", 2);\n__decorateClass([property()], Button.prototype, \"variant\", 1);\n__decorateClass([property({\n  type: String,\n  reflect: true\n})], Button.prototype, \"static\", 2);\n__decorateClass([property({\n  reflect: true\n})], Button.prototype, \"treatment\", 2);\n__decorateClass([property({\n  type: Boolean\n})], Button.prototype, \"quiet\", 1);","map":{"version":3,"names":["html","SizedMixin","property","ButtonBase","buttonStyles","when","VALID_VARIANTS","VALID_STATICS","Button","noDefaultSize","constructor","arguments","pendingLabel","pending","cachedAriaLabel","_variant","treatment","styles","click","variant","requestUpdate","window","__swc","warn","localName","removeAttribute","static","includes","setAttribute","quiet","firstUpdated","changes","hasAttribute","updated","changed","has","getAttribute","disabled","renderButton","buttonContent","__decorateClass","type","String","attribute","prototype","Boolean","reflect"],"sources":["/Users/shivangic/Documents/Github Work/Recommendation-System/node_modules/@spectrum-web-components/button/src/Button.ts"],"sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    PropertyValues,\n    SizedMixin,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { ButtonBase } from './ButtonBase.dev.js'\nimport buttonStyles from './button.css.js';\nimport { when } from '@spectrum-web-components/base/src/directives.js';\n\nexport type DeprecatedButtonVariants = 'cta' | 'overBackground';\nexport type ButtonStatics = 'white' | 'black';\nexport type ButtonVariants =\n    | 'accent'\n    | 'primary'\n    | 'secondary'\n    | 'negative'\n    | ButtonStatics\n    | DeprecatedButtonVariants;\nexport const VALID_VARIANTS = [\n    'accent',\n    'primary',\n    'secondary',\n    'negative',\n    'white',\n    'black',\n];\nexport const VALID_STATICS = ['white', 'black'];\n\nexport type ButtonTreatments = 'fill' | 'outline';\n\n/**\n * @element sp-button\n *\n * @slot - text label of the Button\n * @slot icon - The icon to use for Button\n */\nexport class Button extends SizedMixin(ButtonBase, { noDefaultSize: true }) {\n    public static override get styles(): CSSResultArray {\n        return [...super.styles, buttonStyles];\n    }\n\n    @property({ type: String, attribute: 'pending-label' })\n    public pendingLabel = 'Pending';\n\n    // pending is the property that consumers can use to set the button into a pending state\n    @property({ type: Boolean, reflect: true, attribute: true })\n    public pending = false;\n\n    private cachedAriaLabel: string | null = null;\n\n    public override click(): void {\n        if (this.pending) {\n            return;\n        }\n        super.click();\n    }\n\n    /**\n     * The visual variant to apply to this button.\n     */\n    @property()\n    public get variant(): ButtonVariants {\n        return this._variant;\n    }\n    public set variant(variant: ButtonVariants) {\n        if (variant === this.variant) return;\n\n        this.requestUpdate('variant', this.variant);\n        switch (variant) {\n            case 'cta':\n                this._variant = 'accent';\n                if (window.__swc.DEBUG) {\n                    window.__swc.warn(\n                        this,\n                        `The \"cta\" value of the \"variant\" attribute on <${this.localName}> has been deprecated and will be removed in a future release. Use \"variant='accent'\" instead.`,\n                        'https://opensource.adobe.com/spectrum-web-components/components/button/#variants'\n                    );\n                }\n                break;\n            case 'overBackground':\n                this.removeAttribute('variant');\n                this.static = 'white';\n                this.treatment = 'outline';\n                if (window.__swc.DEBUG) {\n                    window.__swc.warn(\n                        this,\n                        `The \"overBackground\" value of the \"variant\" attribute on <${this.localName}> has been deprecated and will be removed in a future release. Use \"static='white'\" with \"treatment='outline'\" instead.`,\n                        'https://opensource.adobe.com/spectrum-web-components/components/button#static'\n                    );\n                }\n                return;\n            case 'white':\n            case 'black':\n                this.static = variant;\n                this.removeAttribute('variant');\n                if (window.__swc.DEBUG) {\n                    window.__swc.warn(\n                        this,\n                        `The \"black\" and \"white\" values of the \"variant\" attribute on <${this.localName}> has been deprecated and will be removed in a future release. Use \"static='black'\" or \"static='white'\" instead.`,\n                        'https://opensource.adobe.com/spectrum-web-components/components/button#static'\n                    );\n                }\n                return;\n            case null:\n                return;\n            default:\n                if (!VALID_VARIANTS.includes(variant)) {\n                    this._variant = 'accent';\n                } else {\n                    this._variant = variant;\n                }\n                break;\n        }\n        this.setAttribute('variant', this.variant);\n    }\n    private _variant: ButtonVariants = 'accent';\n\n    @property({ type: String, reflect: true })\n    public static: 'black' | 'white' | undefined;\n\n    /**\n     * The visual variant to apply to this button.\n     */\n    @property({ reflect: true })\n    public treatment: ButtonTreatments = 'fill';\n\n    /**\n     * Style this button to be less obvious\n     */\n    @property({ type: Boolean })\n    public set quiet(quiet: boolean) {\n        this.treatment = quiet ? 'outline' : 'fill';\n    }\n\n    public get quiet(): boolean {\n        return this.treatment === 'outline';\n    }\n\n    protected override firstUpdated(changes: PropertyValues<this>): void {\n        super.firstUpdated(changes);\n        // There is no Spectrum design context for an `<sp-button>` without a variant\n        // apply one manually when a consumer has not applied one themselves.\n        if (!this.hasAttribute('variant')) {\n            this.setAttribute('variant', this.variant);\n        }\n    }\n\n    protected override updated(changed: PropertyValues): void {\n        super.updated(changed);\n\n        if (changed.has('pending')) {\n            if (\n                this.pending &&\n                this.pendingLabel !== this.getAttribute('aria-label')\n            ) {\n                if (!this.disabled) {\n                    this.cachedAriaLabel =\n                        this.getAttribute('aria-label') || '';\n                    this.setAttribute('aria-label', this.pendingLabel);\n                }\n            } else if (!this.pending && this.cachedAriaLabel) {\n                this.setAttribute('aria-label', this.cachedAriaLabel);\n            } else if (!this.pending && this.cachedAriaLabel === '') {\n                this.removeAttribute('aria-label');\n            }\n        }\n\n        if (changed.has('disabled')) {\n            if (\n                !this.disabled &&\n                this.pendingLabel !== this.getAttribute('aria-label')\n            ) {\n                if (this.pending) {\n                    this.cachedAriaLabel =\n                        this.getAttribute('aria-label') || '';\n                    this.setAttribute('aria-label', this.pendingLabel);\n                }\n            } else if (this.disabled && this.cachedAriaLabel) {\n                this.setAttribute('aria-label', this.cachedAriaLabel);\n            } else if (this.disabled && this.cachedAriaLabel == '') {\n                this.removeAttribute('aria-label');\n            }\n        }\n    }\n\n    protected override renderButton(): TemplateResult {\n        return html`\n            ${this.buttonContent}\n            ${when(this.pending, () => {\n                import(\n                    '@spectrum-web-components/progress-circle/sp-progress-circle.js'\n                );\n                return html`\n                    <sp-progress-circle\n                        indeterminate\n                        static=\"white\"\n                        aria-hidden=\"true\"\n                    ></sp-progress-circle>\n                `;\n            })}\n        `;\n    }\n}\n"],"mappings":";;;;;;;;;;AAYA,SAEIA,IAAA,EAEAC,UAAA,QAEG;AACP,SAASC,QAAA,QAAgB;AACzB,SAASC,UAAA,QAAkB;AAC3B,OAAOC,YAAA,MAAkB;AACzB,SAASC,IAAA,QAAY;AAWd,aAAMC,cAAA,GAAiB,CAC1B,UACA,WACA,aACA,YACA,SACA,QACJ;AACO,aAAMC,aAAA,GAAgB,CAAC,SAAS,OAAO;AAUvC,aAAMC,MAAA,SAAeP,UAAA,CAAWE,UAAA,EAAY;EAAEM,aAAA,EAAe;AAAK,CAAC,EAAE;EAArEC,YAAA;IAAA,SAAAC,SAAA;IAMH,KAAOC,YAAA,GAAe;IAItB,KAAOC,OAAA,GAAU;IAEjB,KAAQC,eAAA,GAAiC;IAmEzC,KAAQC,QAAA,GAA2B;IASnC,KAAOC,SAAA,GAA8B;EAAA;EAvFrC,WAA2BC,OAAA,EAAyB;IAChD,OAAO,CAAC,GAAG,MAAMA,MAAA,EAAQb,YAAY;EACzC;EAWgBc,MAAA,EAAc;IAC1B,IAAI,KAAKL,OAAA,EAAS;MACd;IACJ;IACA,MAAMK,KAAA,CAAM;EAChB;EAMA,IAAWC,QAAA,EAA0B;IACjC,OAAO,KAAKJ,QAAA;EAChB;EACA,IAAWI,QAAQA,OAAA,EAAyB;IACxC,IAAIA,OAAA,KAAY,KAAKA,OAAA,EAAS;IAE9B,KAAKC,aAAA,CAAc,WAAW,KAAKD,OAAO;IAC1C,QAAQA,OAAA;MACJ,KAAK;QACD,KAAKJ,QAAA,GAAW;QAChB,IAAI,MAAoB;UACpBM,MAAA,CAAOC,KAAA,CAAMC,IAAA,CACT,MACA,kDAAkD,KAAKC,SAAS,kGAChE,kFACJ;QACJ;QACA;MACJ,KAAK;QACD,KAAKC,eAAA,CAAgB,SAAS;QAC9B,KAAKC,MAAA,GAAS;QACd,KAAKV,SAAA,GAAY;QACjB,IAAI,MAAoB;UACpBK,MAAA,CAAOC,KAAA,CAAMC,IAAA,CACT,MACA,6DAA6D,KAAKC,SAAS,2HAC3E,+EACJ;QACJ;QACA;MACJ,KAAK;MACL,KAAK;QACD,KAAKE,MAAA,GAASP,OAAA;QACd,KAAKM,eAAA,CAAgB,SAAS;QAC9B,IAAI,MAAoB;UACpBJ,MAAA,CAAOC,KAAA,CAAMC,IAAA,CACT,MACA,iEAAiE,KAAKC,SAAS,oHAC/E,+EACJ;QACJ;QACA;MACJ,KAAK;QACD;MACJ;QACI,IAAI,CAAClB,cAAA,CAAeqB,QAAA,CAASR,OAAO,GAAG;UACnC,KAAKJ,QAAA,GAAW;QACpB,OAAO;UACH,KAAKA,QAAA,GAAWI,OAAA;QACpB;QACA;IACR;IACA,KAAKS,YAAA,CAAa,WAAW,KAAKT,OAAO;EAC7C;EAgBA,IAAWU,MAAMA,KAAA,EAAgB;IAC7B,KAAKb,SAAA,GAAYa,KAAA,GAAQ,YAAY;EACzC;EAEA,IAAWA,MAAA,EAAiB;IACxB,OAAO,KAAKb,SAAA,KAAc;EAC9B;EAEmBc,aAAaC,OAAA,EAAqC;IACjE,MAAMD,YAAA,CAAaC,OAAO;IAG1B,IAAI,CAAC,KAAKC,YAAA,CAAa,SAAS,GAAG;MAC/B,KAAKJ,YAAA,CAAa,WAAW,KAAKT,OAAO;IAC7C;EACJ;EAEmBc,QAAQC,OAAA,EAA+B;IACtD,MAAMD,OAAA,CAAQC,OAAO;IAErB,IAAIA,OAAA,CAAQC,GAAA,CAAI,SAAS,GAAG;MACxB,IACI,KAAKtB,OAAA,IACL,KAAKD,YAAA,KAAiB,KAAKwB,YAAA,CAAa,YAAY,GACtD;QACE,IAAI,CAAC,KAAKC,QAAA,EAAU;UAChB,KAAKvB,eAAA,GACD,KAAKsB,YAAA,CAAa,YAAY,KAAK;UACvC,KAAKR,YAAA,CAAa,cAAc,KAAKhB,YAAY;QACrD;MACJ,WAAW,CAAC,KAAKC,OAAA,IAAW,KAAKC,eAAA,EAAiB;QAC9C,KAAKc,YAAA,CAAa,cAAc,KAAKd,eAAe;MACxD,WAAW,CAAC,KAAKD,OAAA,IAAW,KAAKC,eAAA,KAAoB,IAAI;QACrD,KAAKW,eAAA,CAAgB,YAAY;MACrC;IACJ;IAEA,IAAIS,OAAA,CAAQC,GAAA,CAAI,UAAU,GAAG;MACzB,IACI,CAAC,KAAKE,QAAA,IACN,KAAKzB,YAAA,KAAiB,KAAKwB,YAAA,CAAa,YAAY,GACtD;QACE,IAAI,KAAKvB,OAAA,EAAS;UACd,KAAKC,eAAA,GACD,KAAKsB,YAAA,CAAa,YAAY,KAAK;UACvC,KAAKR,YAAA,CAAa,cAAc,KAAKhB,YAAY;QACrD;MACJ,WAAW,KAAKyB,QAAA,IAAY,KAAKvB,eAAA,EAAiB;QAC9C,KAAKc,YAAA,CAAa,cAAc,KAAKd,eAAe;MACxD,WAAW,KAAKuB,QAAA,IAAY,KAAKvB,eAAA,IAAmB,IAAI;QACpD,KAAKW,eAAA,CAAgB,YAAY;MACrC;IACJ;EACJ;EAEmBa,aAAA,EAA+B;IAC9C,OAAOtC,IAAA;AAAA,cACD,KAAKuC,aAAa;AAAA,cAClBlC,IAAA,CAAK,KAAKQ,OAAA,EAAS,MAAM;MACvB,OACI,gEACJ;MACA,OAAOb,IAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;IAOX,CAAC,CAAC;AAAA;EAEV;AACJ;AAhKWwC,eAAA,EADNtC,QAAA,CAAS;EAAEuC,IAAA,EAAMC,MAAA;EAAQC,SAAA,EAAW;AAAgB,CAAC,IAL7CnC,MAAA,CAMFoC,SAAA;AAIAJ,eAAA,EADNtC,QAAA,CAAS;EAAEuC,IAAA,EAAMI,OAAA;EAASC,OAAA,EAAS;EAAMH,SAAA,EAAW;AAAK,CAAC,IATlDnC,MAAA,CAUFoC,SAAA;AAeIJ,eAAA,EADVtC,QAAA,CAAS,IAxBDM,MAAA,CAyBEoC,SAAA;AAyDJJ,eAAA,EADNtC,QAAA,CAAS;EAAEuC,IAAA,EAAMC,MAAA;EAAQI,OAAA,EAAS;AAAK,CAAC,IAjFhCtC,MAAA,CAkFFoC,SAAA;AAMAJ,eAAA,EADNtC,QAAA,CAAS;EAAE4C,OAAA,EAAS;AAAK,CAAC,IAvFlBtC,MAAA,CAwFFoC,SAAA;AAMIJ,eAAA,EADVtC,QAAA,CAAS;EAAEuC,IAAA,EAAMI;AAAQ,CAAC,IA7FlBrC,MAAA,CA8FEoC,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}