{"ast":null,"code":"\"use strict\";\n\nexport const elementResolverUpdatedSymbol = Symbol(\"element resolver updated\");\nexport class ElementResolutionController {\n  constructor(host, {\n    selector\n  } = {\n    selector: \"\"\n  }) {\n    this._element = null;\n    this._selector = \"\";\n    this.mutationCallback = mutationList => {\n      let needsResolution = false;\n      mutationList.forEach(mutation => {\n        if (needsResolution) return;\n        if (mutation.type === \"childList\") {\n          const currentElementRemoved = this.element && [...mutation.removedNodes].includes(this.element);\n          const matchingElementAdded = !!this.selector && [...mutation.addedNodes].some(this.elementIsSelected);\n          needsResolution = needsResolution || currentElementRemoved || matchingElementAdded;\n        }\n        if (mutation.type === \"attributes\") {\n          const attributeChangedOnCurrentElement = mutation.target === this.element;\n          const attributeChangedOnMatchingElement = !!this.selector && this.elementIsSelected(mutation.target);\n          needsResolution = needsResolution || attributeChangedOnCurrentElement || attributeChangedOnMatchingElement;\n        }\n      });\n      if (needsResolution) {\n        this.resolveElement();\n      }\n    };\n    this.elementIsSelected = el => {\n      var _a;\n      return this.selectorIsId ? (el == null ? void 0 : el.id) === this.selectorAsId : (_a = el == null ? void 0 : el.matches) == null ? void 0 : _a.call(el, this.selector);\n    };\n    this.host = host;\n    this.selector = selector;\n    this.observer = new MutationObserver(this.mutationCallback);\n    this.host.addController(this);\n  }\n  get element() {\n    return this._element;\n  }\n  set element(element) {\n    if (element === this.element) return;\n    const previous = this.element;\n    this._element = element;\n    this.host.requestUpdate(elementResolverUpdatedSymbol, previous);\n  }\n  get selector() {\n    return this._selector;\n  }\n  set selector(selector) {\n    if (selector === this.selector) return;\n    this.releaseElement();\n    this._selector = selector;\n    this.resolveElement();\n  }\n  get selectorAsId() {\n    return this.selector.slice(1);\n  }\n  get selectorIsId() {\n    return !!this.selector && this.selector.startsWith(\"#\");\n  }\n  hostConnected() {\n    this.resolveElement();\n    this.observer.observe(this.host.getRootNode(), {\n      subtree: true,\n      childList: true,\n      attributes: true\n    });\n  }\n  hostDisconnected() {\n    this.releaseElement();\n    this.observer.disconnect();\n  }\n  resolveElement() {\n    if (!this.selector) {\n      this.releaseElement();\n      return;\n    }\n    const parent = this.host.getRootNode();\n    this.element = this.selectorIsId ? parent.getElementById(this.selectorAsId) : parent.querySelector(this.selector);\n  }\n  releaseElement() {\n    this.element = null;\n  }\n}","map":{"version":3,"names":["elementResolverUpdatedSymbol","Symbol","ElementResolutionController","constructor","host","selector","_element","_selector","mutationCallback","mutationList","needsResolution","forEach","mutation","type","currentElementRemoved","element","removedNodes","includes","matchingElementAdded","addedNodes","some","elementIsSelected","attributeChangedOnCurrentElement","target","attributeChangedOnMatchingElement","resolveElement","el","_a","selectorIsId","id","selectorAsId","matches","call","observer","MutationObserver","addController","previous","requestUpdate","releaseElement","slice","startsWith","hostConnected","observe","getRootNode","subtree","childList","attributes","hostDisconnected","disconnect","parent","getElementById","querySelector"],"sources":["/Users/shivangic/Documents/Github Work/Recommendation-System/node_modules/@spectrum-web-components/reactive-controllers/src/ElementResolution.ts"],"sourcesContent":["/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport type { ReactiveController, ReactiveElement } from 'lit';\nexport const elementResolverUpdatedSymbol = Symbol('element resolver updated');\n\nexport class ElementResolutionController implements ReactiveController {\n    get element(): HTMLElement | null {\n        return this._element;\n    }\n\n    set element(element: HTMLElement | null) {\n        if (element === this.element) return;\n        const previous = this.element;\n        this._element = element;\n        // requestUpdate leveraging the exported Symbol() so that the\n        // changes can be easily tracked in the host element.\n        this.host.requestUpdate(elementResolverUpdatedSymbol, previous);\n    }\n\n    private _element: HTMLElement | null = null;\n\n    private host!: ReactiveElement;\n\n    private observer!: MutationObserver;\n\n    get selector(): string {\n        return this._selector;\n    }\n\n    set selector(selector: string) {\n        if (selector === this.selector) return;\n        this.releaseElement();\n        this._selector = selector;\n        this.resolveElement();\n    }\n\n    private _selector = '';\n\n    get selectorAsId(): string {\n        return this.selector.slice(1);\n    }\n\n    get selectorIsId(): boolean {\n        return !!this.selector && this.selector.startsWith('#');\n    }\n\n    constructor(\n        host: ReactiveElement,\n        { selector }: { selector: string } = { selector: '' }\n    ) {\n        this.host = host;\n        this.selector = selector;\n        this.observer = new MutationObserver(this.mutationCallback);\n        // Add the controller after the MutationObserver has been created in preparation\n        // for the `hostConnected`/`hostDisconnected` callbacks to be run.\n        this.host.addController(this);\n    }\n\n    protected mutationCallback: MutationCallback = (mutationList) => {\n        let needsResolution = false;\n        mutationList.forEach((mutation) => {\n            if (needsResolution) return;\n            if (mutation.type === 'childList') {\n                const currentElementRemoved =\n                    this.element &&\n                    [...mutation.removedNodes].includes(this.element);\n                const matchingElementAdded =\n                    !!this.selector &&\n                    ([...mutation.addedNodes] as HTMLElement[]).some(\n                        this.elementIsSelected\n                    );\n                needsResolution =\n                    needsResolution ||\n                    currentElementRemoved ||\n                    matchingElementAdded;\n            }\n            if (mutation.type === 'attributes') {\n                const attributeChangedOnCurrentElement =\n                    mutation.target === this.element;\n                const attributeChangedOnMatchingElement =\n                    !!this.selector &&\n                    this.elementIsSelected(mutation.target as HTMLElement);\n                needsResolution =\n                    needsResolution ||\n                    attributeChangedOnCurrentElement ||\n                    attributeChangedOnMatchingElement;\n            }\n        });\n        if (needsResolution) {\n            this.resolveElement();\n        }\n    };\n\n    public hostConnected(): void {\n        this.resolveElement();\n        this.observer.observe(this.host.getRootNode(), {\n            subtree: true,\n            childList: true,\n            attributes: true,\n        });\n    }\n\n    public hostDisconnected(): void {\n        this.releaseElement();\n        this.observer.disconnect();\n    }\n\n    private resolveElement(): void {\n        if (!this.selector) {\n            this.releaseElement();\n            return;\n        }\n\n        const parent = this.host.getRootNode() as ShadowRoot;\n        this.element = this.selectorIsId\n            ? (parent.getElementById(this.selectorAsId) as HTMLElement)\n            : (parent.querySelector(this.selector) as HTMLElement);\n    }\n\n    private releaseElement(): void {\n        this.element = null;\n    }\n\n    private elementIsSelected = (el: HTMLElement): boolean => {\n        return this.selectorIsId\n            ? el?.id === this.selectorAsId\n            : el?.matches?.(this.selector);\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}