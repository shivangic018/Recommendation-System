export declare const Button: import("react").ComponentType<Omit<import("react").HTMLAttributes<import("button/src").Button>, "type" | "size" | "download" | "label" | "href" | "target" | "rel" | "disabled" | "slotHasContent" | "renderRoot" | "isUpdatePending" | "hasUpdated" | "addController" | "removeController" | "connectedCallback" | "disconnectedCallback" | "attributeChangedCallback" | "requestUpdate" | "updateComplete" | "active" | "static" | "renderOptions" | "isLTR" | "hasVisibleFocusInTree" | "pendingLabel" | "pending" | "variant" | "treatment" | "quiet" | "focusElement" | "renderAnchor" | "manageTextObservedSlot"> & {} & Partial<Omit<import("button/src").Button, keyof HTMLElement>> & import("react").RefAttributes<import("button/src").Button>>;
export declare const ClearButton: import("react").ComponentType<Omit<import("react").HTMLAttributes<import("button/src").ClearButton>, "type" | "size" | "download" | "label" | "href" | "target" | "rel" | "disabled" | "slotHasContent" | "renderRoot" | "isUpdatePending" | "hasUpdated" | "addController" | "removeController" | "connectedCallback" | "disconnectedCallback" | "attributeChangedCallback" | "requestUpdate" | "updateComplete" | "active" | "renderOptions" | "isLTR" | "hasVisibleFocusInTree" | "variant" | "focusElement" | "renderAnchor" | "manageTextObservedSlot"> & {} & Partial<Omit<import("button/src").ClearButton, keyof HTMLElement>> & import("react").RefAttributes<import("button/src").ClearButton>>;
export declare const CloseButton: import("react").ComponentType<Omit<import("react").HTMLAttributes<import("button/src").CloseButton>, "type" | "size" | "download" | "label" | "href" | "target" | "rel" | "disabled" | "slotHasContent" | "renderRoot" | "isUpdatePending" | "hasUpdated" | "addController" | "removeController" | "connectedCallback" | "disconnectedCallback" | "attributeChangedCallback" | "requestUpdate" | "updateComplete" | "active" | "static" | "renderOptions" | "isLTR" | "hasVisibleFocusInTree" | "variant" | "focusElement" | "renderAnchor" | "manageTextObservedSlot"> & {} & Partial<Omit<import("button/src").CloseButton, keyof HTMLElement>> & import("react").RefAttributes<import("button/src").CloseButton>>;
